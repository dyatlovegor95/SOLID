SOLID - принципы, которые позволяют сделать взаимодействие между элементами системы более эффиктивным (масштабируемым)
Далее SOLID будет рассматриваться в рамках ООП. А в ООП все крутится вокруг классов. Но SOLID это такие принципы, которые могут применяться
для моделей данных, для функционального программирования и т.д. 



S - Single Rsponsibility Principle (Единый принцип ответственности)
Один класс отвечает за одну функциональность, поведение


O - Open Close Principle (Принцип Открытого Закрытия)
Класс должен быть открыт для рассширения, но быть закрытым для модификации
Это означает что, вы никогда не будите изменять старый код при добавлении новой функциональности


L - Liskov Substitution Principle (Принцип замещения Лискова)
Функции которые имеют базовый тип, должны уметь с ним взаимодействовать +
взаимодействовать с подтипами данного типа, незная ничего о них

I - Interface Segregation Principle (Принцип разделения интерфейса)

D - Dependency Inversion Principle (Принцип обращения зависимостей)
